plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.fintech'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JSON 처리 라이브러리
    implementation 'org.json:json:20220320'

    // Spring Boot Starter 의존성
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // MySQL Connector
    implementation 'mysql:mysql-connector-java:8.0.33'

    // JWT 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'           // Google Firebase Admin
    implementation 'com.fasterxml.jackson.core:jackson-core:2.16.1'     // Jackson Data Bind

    // SpringDoc OpenAPI (2.x 버전 사용)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // WebFlux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.data:spring-data-redis'

}

tasks.named('test') {
    useJUnitPlatform()
}
